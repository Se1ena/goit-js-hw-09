{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAUC,SAASC,cAAc,QACjCC,EAAYF,SAASG,iBAAiB,SACtCC,EAAWF,EAAU,GACrBG,EAAUH,EAAU,GACpBI,EAAYJ,EAAU,GACtBK,EAASP,SAASC,cAAc,UAEtC,SAASO,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAKbX,EAAQkB,iBAAiB,UAAUC,IACjCA,EAAMC,iBACN,IAAIC,EAAQC,SAASjB,EAASkB,OAC9B,MAAMC,EAAOF,SAAShB,EAAQiB,OACxBE,EAASH,SAASf,EAAUgB,OAClC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAS,EAAGC,GAAK,EACpCC,QAAQC,IAAIP,EAAOG,EAAMC,GACzBhB,EAAciB,EAAGL,GACdQ,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAAhC,GAASiC,OAAOC,QACd,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAAhC,GAASiC,OAAOG,QACd,sBAAoBxB,QAAeC,MAAU,IAGnDU,GAASG,C,IAIbhB,EAAOU,iBAAiB,SAAS","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nimport '../css/common.css';\n\nconst formRef = document.querySelector('form');\nconst inputsRef = document.querySelectorAll('input');\nconst delayRef = inputsRef[0];\nconst stepRef = inputsRef[1];\nconst amountRef = inputsRef[2];\nconst btnRef = document.querySelector('button');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nformRef.addEventListener('submit', event => {\n  event.preventDefault();\n  let delay = parseInt(delayRef.value);\n  const step = parseInt(stepRef.value);\n  const amount = parseInt(amountRef.value);\n  for (let i = 0; i <= amount - 1; i += 1) {\n    console.log(delay, step, amount);\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n});\n\nbtnRef.addEventListener('click', () => {\n  //new Promise();\n});\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$inputsRef","querySelectorAll","$47d4ff9957288465$var$delayRef","$47d4ff9957288465$var$stepRef","$47d4ff9957288465$var$amountRef","$47d4ff9957288465$var$btnRef","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","parseInt","value","step","amount","i","console","log","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.f6b4da3e.js.map"}