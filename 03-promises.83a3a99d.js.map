{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIMC,EAAUC,SAASC,cAAc,QACjCC,EAAYF,SAASG,iBAAiB,SACtCC,EAAWF,EAAU,GACrBG,EAAUH,EAAU,GACpBI,EAAYJ,EAAU,GACtBK,EAASP,SAASC,cAAc,UAEtC,SAASO,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAKPX,EAAQkB,iBAAiB,UAAU,SAAAC,GACjCA,EAAMC,iBAIN,IAHA,IAAIC,EAAQC,SAASjB,EAASkB,OACxBC,EAAOF,SAAShB,EAAQiB,OACxBE,EAASH,SAASf,EAAUgB,OACzBG,EAAI,EAAGA,GAAKD,EAAS,EAAGC,GAAK,EACpCC,QAAQC,IAAIP,EAAOG,EAAMC,GACzBhB,EAAciB,EAAGL,GACdQ,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAAjC,GAASkC,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjDwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAAjC,GAASkC,OAAOI,QACd,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjDU,GAASG,C,IAIbhB,EAAOU,iBAAiB,SAAS,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nimport '../css/common.css';\n\nconst formRef = document.querySelector('form');\nconst inputsRef = document.querySelectorAll('input');\nconst delayRef = inputsRef[0];\nconst stepRef = inputsRef[1];\nconst amountRef = inputsRef[2];\nconst btnRef = document.querySelector('button');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nformRef.addEventListener('submit', event => {\n  event.preventDefault();\n  let delay = parseInt(delayRef.value);\n  const step = parseInt(stepRef.value);\n  const amount = parseInt(amountRef.value);\n  for (let i = 1; i <= amount + 1; i += 1) {\n    console.log(delay, step, amount);\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n});\n\nbtnRef.addEventListener('click', () => {\n  //new Promise();\n});\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$inputsRef","querySelectorAll","$ce04d3a99e08e73b$var$delayRef","$ce04d3a99e08e73b$var$stepRef","$ce04d3a99e08e73b$var$amountRef","$ce04d3a99e08e73b$var$btnRef","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","parseInt","value","step","amount","i","console","log","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.83a3a99d.js.map"}