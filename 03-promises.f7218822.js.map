{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAUC,SAASC,cAAc,SACjCC,EAAYF,SAASG,iBAAiB,UACtCC,EAAWF,EAAU,GACrBG,EAAUH,EAAU,GACpBI,EAAYJ,EAAU,GACtBK,EAASP,SAASC,cAAc,UAEtC,SAASO,EAAcC,EAAUC,GACf,IAAIC,SAAS,CAACC,EAASC,KACrCC,YAAW,KACaC,KAAKC,SAAW,GAGnCJ,EAAQ,C,SAAEH,E,MAAUC,IAGrBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAKbX,EAAQkB,iBAAiB,SAAS,KAChC,MAAMC,EAAQC,SAASf,EAASgB,OAC1BC,EAAOF,SAASd,EAAQe,OACxBE,EAASH,SAASb,EAAUc,OAElCrB,EAAQkB,iBAAiB,UAAUM,IACjCA,EAAMC,iBACN,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAS,EAAGG,GAAK,EACpCC,QAAQC,IAAIT,EAAOG,EAAMC,GACzBd,EAAciB,EAAGP,GACdU,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAqBtB,QAAiBC,MAAU,IAEzEsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAAhC,GAASiC,OAAOG,QAAQ,sBAAoBxB,QAAeC,MAAU,IAEvEQ,GAASG,C,GAEb,IAGJd,EAAOU,iBAAiB,SAAS","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nimport '../css/common.css';\n\nconst formRef = document.querySelector('.form');\nconst inputsRef = document.querySelectorAll('.input');\nconst delayRef = inputsRef[0];\nconst stepRef = inputsRef[1];\nconst amountRef = inputsRef[2];\nconst btnRef = document.querySelector('button');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n         resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  \n}\n\nformRef.addEventListener('input', () => {\n  const delay = parseInt(delayRef.value);\n  const step = parseInt(stepRef.value);\n  const amount = parseInt(amountRef.value);\n\n  formRef.addEventListener('submit', event => {\n    event.preventDefault();\n    for (let i = 0; i <= amount - 1; i += 1) {\n      console.log(delay, step, amount);\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n        delay += step;\n    };\n  });\n});\n\nbtnRef.addEventListener('click', () => {\n  //new Promise();\n})\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$inputsRef","querySelectorAll","$47d4ff9957288465$var$delayRef","$47d4ff9957288465$var$stepRef","$47d4ff9957288465$var$amountRef","$47d4ff9957288465$var$btnRef","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","delay1","parseInt","value","step","amount","event","preventDefault","i","console","log","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.f7218822.js.map"}